
class Task1(object):
    """
    Создать словарь адресной книги, содержащий ФИО и адрес. Заполнить его 50 элементами, реализовать поиск по адресу
    """
    def __init__(self):
        self.dict_generator()
        self.search()

    def dict_generator(self):
        print("dict_generator Task1")
        n = [
            "Комова Елизавета Олеговна",
            "Репенков Сергей Алексеевич",
            "Анисимов Ефим Сергеевич",
            "Борисов Никита Алексеевич",
            "Исмоилова Милена Витальевна",
            "Рогов Владимир Алексеевич",
            "Савочкин Артём Дмитриевич",
            "Кривошеина Елена Олеговна",
            "Пономарев Михаил Александрович",
            "Абдулмеджидов Мирза Мурадович",
            "Егшатян Артем Кирович",
            "Гарайшин Тамерлан Тагирович",
            "Брусова Полина Игоревна",
            "Крылова Елизавета Алексеевна",
            "Гераськина Надежда Станиславовна",
            "Гиниятуллина Эвита Маратовна",
            "Малахов Иван Петрович",
            "Жилина Алена Алексеевна",
            "Королев Илья Алексеевич",
            "Пойкалайнен Александра Максимовна",
            "Щербак Станислав Валентинович",
            "Буркина Елизавета Сергеевна",
            "Мосолова Ксения Дмитриевна",
            "Кротов Олег Валерьевич",
            "Шаповалов Сергей Александрович",
            "Прищепа Екатерина Михайловна",
            "Артемьева Дарья Сергеевна",
            "Попова Софья Александровна",
            "Башмакова Анастасия Алексеевна",
            "Корнева Татьяна Андреевна",
            "Олзошкина Янжина Владленовна",
            "Касьянов Максим Евгеньевич",
            "Олейник Анастасия Александровна",
            "Сивухов Артём Олегович",
            "Груздев Всеволод Алексеевич",
            "Буковец Данила Андреевич",
            "Зелянина Алёна Геннадьевна",
            "Мерзляков Данила Артемович",
            "Карасёв Артём Владимирович",
            "Пономаренко Александр Павлович",
            "Курносиков Кирилл Андреевич",
            "Гуриков Дмитрий Олегович",
            "Котова Екатерина Дмитриевна",
            "Лихачев Марк Игоревич",
            "Волкова Татьяна Алексеевна",
            "Марунько Анна Сергеевна",
            "Пашкевич Денис Вячеславович",
            "Маркова Ольга Алексеевна",
            "Термышева Полина Евгеньевна",
            "Василевская Лидия Игоревна",
        ]
        self.d = {}
        for i in range(0,len(n),2):
            self.d["адрес №"+str(i)]=[n[i],n[i+1]]

    def search(self):
        print("search Task1")
        s = input("Введите адрес для поиска ->")
        if s in self.d:
            print("Адрес найден!\nПроживающие по адресу:")
            [print(x) for x in self.d[s]]
        else:
            for k, v in self.d.items():
                for p in v:
                    if s in p:
                        print("Возможно вы имели ввиду '"+p+"' по '"+k+"'")
            

class Task2(Task1):
    """
    создать словарь телефонного справочника. Заполнить его 50 элементами. Реализовать поиск по телефону
    """
    def __init__(self):
        self.dict_generator()
        self.search()
    
    def dict_generator(self):
        print("dict_generator Task2")



class Task3(object):
    """
    реализовать проверку на существующие записи в предыдущих заданиях с возможностью дополнения
    """
    pass

class Task4(object):
    """
    создать словарь на свободную тему, включающий в себя кортеж в качестве ключа, реализовать поиск
    """
    pass

class Task5(object):
    """
    создать словарь авиарейсов, в возможностью поиска маршрута из точки А в точку В с учётом 1 пересадки
    """
    pass

class Task6(object):
    """
    создать словарь железнодорожных сообщений с учетом более одной но менее 4 пересадок, с рекомендацией оптимального маршрута по времени
    """
    pass


if __name__ == "__main__":
    Task2()