(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202886,       4429]
NotebookOptionsPosition[    196346,       4304]
NotebookOutlinePosition[    196699,       4320]
CellTagsIndexPosition[    196656,       4317]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.780744233524158*^9, 3.780744233525609*^9}, 
   3.780750677046774*^9},ExpressionUUID->"dfdef68e-d752-4929-8146-\
ebb004141fc4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["A", "3"], " ", 
  SuperscriptBox["and", "3"], " ", 
  SuperscriptBox["B", "3"], " ", 
  SuperscriptBox["not", "2"], " ", 
  SuperscriptBox["or", "2"], " ", "simplify"}]], "Output",
 CellChangeTimes->{3.7807442344364243`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"cd59111f-daa8-46a0-86d6-ece1953aae1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanMinimize", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Not]", "a"}], "\[And]", "b"}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{"a", "\[And]", 
     RowBox[{"\[Not]", "b"}]}], ")"}], " ", "\[Or]", " ", 
   RowBox[{"(", 
    RowBox[{"a", " ", "\[And]", " ", "b"}], ")"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.780744236318528*^9, 3.780744337205566*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"b8e011eb-c03c-4a41-a311-e1ffd7878299"],

Cell[BoxData[
 RowBox[{"a", "||", "b"}]], "Output",
 CellChangeTimes->{3.780744338320612*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f1276e5c-1f89-44ca-8f68-ee72c4673a72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Not]", "a"}], "\[And]", " ", 
    RowBox[{"\[Not]", "b"}], " ", "\[And]", " ", "\:0441"}], " ", ")"}], 
  "\[Or]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Not]", "a"}], "\[And]", "b", "\[And]", 
    RowBox[{"\[Not]", "\:0441"}]}], ")"}], " ", "\[Or]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Not]", "a"}], " ", "\[And]", " ", "b", "\[And]", " ", 
    "\:0441"}], ")"}], "\[Or]", " ", 
  RowBox[{"(", 
   RowBox[{"a", " ", "\[And]", " ", 
    RowBox[{"\[Not]", " ", "b"}], "\[And]", " ", 
    RowBox[{"\[Not]", " ", "\:0441"}]}], ")"}], " ", "\[Or]", " ", 
  RowBox[{"(", 
   RowBox[{"a", " ", "\[And]", "  ", "b", "\[And]", " ", 
    RowBox[{"\[Not]", " ", "\:0441"}]}], ")"}], " "}]], "Input",
 CellChangeTimes->{{3.780750586912664*^9, 3.780750603486883*^9}, {
  3.780750695319865*^9, 3.7807507823165493`*^9}, {3.780753718375526*^9, 
  3.780753719791977*^9}},
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"74c53090-7a06-4dbe-b315-61169d0bf7d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "a"}], "&&", 
    RowBox[{"!", "b"}], "&&", "\:0441"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "a"}], "&&", "b", "&&", 
    RowBox[{"!", "\:0441"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "a"}], "&&", "b", "&&", "\:0441"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"a", "&&", 
    RowBox[{"!", "b"}], "&&", 
    RowBox[{"!", "\:0441"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"a", "&&", "b", "&&", 
    RowBox[{"!", "\:0441"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7807445365527573`*^9, 3.780750605033112*^9, 3.780750784764756*^9, 
   3.780750904561564*^9, 3.780751081347498*^9, {3.780753706169553*^9, 
   3.78075372300408*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"5b579ed7-5c68-4037-8886-8578fe5d2580"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"BooleanTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\:0441", ",", "a", ",", "b", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", 
          RowBox[{"!", "b"}], "&&", "\:0441"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b", "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b", "&&", "\:0441"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"a", "&&", 
          RowBox[{"!", "b"}], "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"a", "&&", "b", "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\:0441", ",", "a", ",", "b"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"\:0441", ",", "a", ",", "b", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", "a"}], "&&", 
           RowBox[{"!", "b"}], "&&", "\:0441"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", "a"}], "&&", "b", "&&", 
           RowBox[{"!", "\:0441"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", "a"}], "&&", "b", "&&", "\:0441"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"a", "&&", 
           RowBox[{"!", "b"}], "&&", 
           RowBox[{"!", "\:0441"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"a", "&&", "b", "&&", 
           RowBox[{"!", "\:0441"}]}], ")"}]}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[9]:=",ExpressionUUID->"ac64d18b-6dd1-4a40-b547-c39142d404ef"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\:0441",
       HoldForm], 
      TagBox["a",
       HoldForm], 
      TagBox["b",
       HoldForm], 
      TagBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", 
          RowBox[{"!", "b"}], "&&", "\:0441"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b", "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b", "&&", "\:0441"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"a", "&&", 
          RowBox[{"!", "b"}], "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"a", "&&", "b", "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}]}],
       HoldForm]},
     {"True", "True", "True", "False"},
     {"True", "True", "False", "False"},
     {"True", "False", "True", "True"},
     {"True", "False", "False", "True"},
     {"False", "True", "True", "True"},
     {"False", "True", "False", "True"},
     {"False", "False", "True", "True"},
     {"False", "False", "False", "False"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`\:0441, $CellContext`a, $CellContext`b, 
       Or[
        And[
         Not[$CellContext`a], 
         Not[$CellContext`b], $CellContext`\:0441], 
        And[
         Not[$CellContext`a], $CellContext`b, 
         Not[$CellContext`\:0441]], 
        And[
         Not[$CellContext`a], $CellContext`b, $CellContext`\:0441], 
        And[$CellContext`a, 
         Not[$CellContext`b], 
         Not[$CellContext`\:0441]], 
        And[$CellContext`a, $CellContext`b, 
         Not[$CellContext`\:0441]]]}}]]]], "Output",
 CellChangeTimes->{3.7807537292600813`*^9},
 CellLabel->
  "Out[9]//TableForm=",ExpressionUUID->"23d499ba-c7d0-4656-9116-323f89aa41c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogicalExpand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\:0441", "&&", 
     RowBox[{"!", "a"}]}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "\:0441"}], "&&", "a"}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "a"}], "&&", "b"}], ")"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[6]:=",ExpressionUUID->"a98a514f-5950-4b55-aab6-98bf11950cda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\:0441", "&&", 
    RowBox[{"!", "a"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"a", "&&", 
    RowBox[{"!", "\:0441"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"b", "&&", 
    RowBox[{"!", "a"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.780753708075029*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5df90f04-80f1-4041-9b73-aa0aa034494c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"BooleanTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\:0441", ",", "a", ",", "b", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\:0441", "&&", 
          RowBox[{"!", "a"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"a", "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"b", "&&", 
          RowBox[{"!", "a"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\:0441", ",", "a", ",", "b"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"\:0441", ",", "a", ",", "b", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\:0441", "&&", 
           RowBox[{"!", "a"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"a", "&&", 
           RowBox[{"!", "\:0441"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"b", "&&", 
           RowBox[{"!", "a"}]}], ")"}]}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[7]:=",ExpressionUUID->"76a6084f-b0ae-45c4-ab47-8acbff7ba21a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\:0441",
       HoldForm], 
      TagBox["a",
       HoldForm], 
      TagBox["b",
       HoldForm], 
      TagBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\:0441", "&&", 
          RowBox[{"!", "a"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"a", "&&", 
          RowBox[{"!", "\:0441"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"b", "&&", 
          RowBox[{"!", "a"}]}], ")"}]}],
       HoldForm]},
     {"True", "True", "True", "False"},
     {"True", "True", "False", "False"},
     {"True", "False", "True", "True"},
     {"True", "False", "False", "True"},
     {"False", "True", "True", "True"},
     {"False", "True", "False", "True"},
     {"False", "False", "True", "True"},
     {"False", "False", "False", "False"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`\:0441, $CellContext`a, $CellContext`b, 
       Or[
        And[$CellContext`\:0441, 
         Not[$CellContext`a]], 
        And[$CellContext`a, 
         Not[$CellContext`\:0441]], 
        And[$CellContext`b, 
         Not[$CellContext`a]]]}}]]]], "Output",
 CellChangeTimes->{3.780753713075273*^9},
 CellLabel->
  "Out[7]//TableForm=",ExpressionUUID->"f1c5b1c5-faf6-4707-963d-908c3b25ea0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "WolframAlphaLong",
 CellChangeTimes->{{3.780751101250258*^9, 3.780751105674065*^9}, 
   3.780753690974881*^9},ExpressionUUID->"57f71df0-74e4-4ba4-9d9b-\
b51662bcdf97"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "\[Not]a\[And] \[Not]b \[And] \\:0441 \
)\[Or](\[Not]a\[And]b\[And]\[Not]\\:0441) \[Or] (\[Not]a \[And] b\[And] \
\\:0441)\[Or] (a \[And] \[Not] b\[And] \[Not] \\:0441) \[Or] (a \[And]  b\
\[And] \[Not] \:0441", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, 
   Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "false", "error" -> "false", "numpods" -> "0", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "2.384", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "", "parseidserver" -> "3", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "3", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2019, 10, 22, 19, 38, 35.669063`8.304866680505796}, "Line" -> 
    4, "SessionID" -> 17602745718665865911}, Typeset`showpods$$ = {}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = 
   "\[Not]a\[And] \[Not]b \[And] \\:0441 \
)\[Or](\[Not]a\[And]b\[And]\[Not]\\:0441) \[Or] (\[Not]a \[And] b\[And] \
\\:0441)\[Or] (a \[And] \[Not] b\[And] \[Not] \\:0441) \[Or] (a \[And]  b\
\[And] \[Not] \:0441"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {}, {}, Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, 
        Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1373., {41., 47.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7807511157031*^9},ExpressionUUID->"4dd9db06-c5c0-4a21-900d-66edb94d61f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"BooleanTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\:0441", ",", "a", ",", "b", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\:0441", "&&", 
          RowBox[{"!", "a"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "\:0441"}], "&&", "a"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\:0441", ",", "a", ",", "b"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"\:0441", ",", "a", ",", "b", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\:0441", "&&", 
           RowBox[{"!", "a"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", "\:0441"}], "&&", "a"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"!", "a"}], "&&", "b"}], ")"}]}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[65]:=",ExpressionUUID->"7acbab40-1454-4221-bc6a-2744cb0a6f3e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\:0441",
       HoldForm], 
      TagBox["a",
       HoldForm], 
      TagBox["b",
       HoldForm], 
      TagBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\:0441", "&&", 
          RowBox[{"!", "a"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "\:0441"}], "&&", "a"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b"}], ")"}]}],
       HoldForm]},
     {"True", "True", "True", "False"},
     {"True", "True", "False", "False"},
     {"True", "False", "True", "True"},
     {"True", "False", "False", "True"},
     {"False", "True", "True", "True"},
     {"False", "True", "False", "True"},
     {"False", "False", "True", "True"},
     {"False", "False", "False", "False"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`\:0441, $CellContext`a, $CellContext`b, 
       Or[
        And[$CellContext`\:0441, 
         Not[$CellContext`a]], 
        And[
         Not[$CellContext`\:0441], $CellContext`a], 
        And[
         Not[$CellContext`a], $CellContext`b]]}}]]]], "Output",
 CellChangeTimes->{3.7807509074974623`*^9},
 CellLabel->
  "Out[65]//TableForm=",ExpressionUUID->"f33b9bfa-0b89-443e-a639-\
d856387cf7f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False", ",", "False"}], "}"}]}], 
   "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[68]:=",ExpressionUUID->"f251f30c-fee3-4377-84e6-5e032ea79856"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"True", "True", "True", "False"},
     {"True", "True", "False", "False"},
     {"True", "False", "True", "True"},
     {"True", "False", "False", "True"},
     {"False", "True", "True", "True"},
     {"False", "True", "False", "True"},
     {"False", "False", "True", "True"},
     {"False", "False", "False", "False"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.780750930504137*^9},
 CellLabel->
  "Out[68]//MatrixForm=",ExpressionUUID->"fe2e6560-b7d3-42da-8941-\
29f16e89000e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Boole", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False", ",", "False"}], "}"}]}], 
   "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[69]:=",ExpressionUUID->"9ea49e6a-b911-4e5d-ae0c-6e7381c983a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7807509354578657`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"0b93e379-7ab9-4b02-b237-521f399e68d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[70]:=",ExpressionUUID->"e3a68266-8656-4c55-9bbb-b48b5285a89d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "0"},
     {"1", "1", "0", "0"},
     {"1", "0", "1", "1"},
     {"1", "0", "0", "1"},
     {"0", "1", "1", "1"},
     {"0", "1", "0", "1"},
     {"0", "0", "1", "1"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.780750939071373*^9},
 CellLabel->
  "Out[70]//MatrixForm=",ExpressionUUID->"4b1e004e-4d7a-4a57-a091-\
f5b416a3d433"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.780750948936173*^9},
 NumberMarks->False,ExpressionUUID->"12a7d76b-15d2-4879-8119-da86b5bd728c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.780750922036327*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"b81f638c-413f-409b-b5a0-37ef51e46e3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.780750951252557*^9, 3.780750951629903*^9}},
 NumberMarks->False,ExpressionUUID->"d948eaaa-80d3-4df4-b5ff-d60f419a9bd8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7807509252864923`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"65cca746-bdc6-4171-a23b-7a753d803e4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.780750912941937*^9, 3.780750914269079*^9}},
 NumberMarks->False,ExpressionUUID->"ae3248fc-3f67-4e79-b48b-f5b22a81a038"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\:0441",
       HoldForm], 
      TagBox["a",
       HoldForm], 
      TagBox["b",
       HoldForm], 
      TagBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\:0441", "&&", 
          RowBox[{"!", "a"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "\:0441"}], "&&", "a"}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", "a"}], "&&", "b"}], ")"}]}],
       HoldForm]},
     {"True", "True", "True", "False"},
     {"True", "True", "False", "False"},
     {"True", "False", "True", "True"},
     {"True", "False", "False", "True"},
     {"False", "True", "True", "True"},
     {"False", "True", "False", "True"},
     {"False", "False", "True", "True"},
     {"False", "False", "False", "False"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`\:0441, $CellContext`a, $CellContext`b, 
       Or[
        And[$CellContext`\:0441, 
         Not[$CellContext`a]], 
        And[
         Not[$CellContext`\:0441], $CellContext`a], 
        And[
         Not[$CellContext`a], $CellContext`b]]}}]]]], "Output",
 CellChangeTimes->{3.7807508411606083`*^9},
 CellLabel->
  "Out[63]//TableForm=",ExpressionUUID->"40458741-84ad-4f88-9044-\
1068af729f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.780750838916987*^9},
 NumberMarks->False,ExpressionUUID->"c6ff433e-6b6a-44c2-a3a4-486319d544e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False", ",", "True"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.780750835680629*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"f1277f25-9103-4e1a-a350-c845038d4909"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7807508330819807`*^9},
 NumberMarks->False,ExpressionUUID->"0685eb3d-c05a-4d62-b1f9-4b960a8eff47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\:0441", "&&", 
    RowBox[{"!", "a"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"a", "&&", 
    RowBox[{"!", "\:0441"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"b", "&&", 
    RowBox[{"!", "a"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.780750807406281*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"2f9b83f1-9780-4b48-b49c-a8f4d3b17d01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7807508311285257`*^9},
 NumberMarks->False,ExpressionUUID->"bc96d93d-9ccb-438a-ba46-23427d185bb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\:0441", "&&", 
    RowBox[{"!", "a"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "\:0441"}], "&&", "a"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "a"}], "&&", "b"}], ")"}]}]], "Output",
 CellChangeTimes->{3.780750812241069*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"58753e8e-ca99-4cbb-bfa2-7ed9df961a64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.780750824405794*^9},
 NumberMarks->False,ExpressionUUID->"49aa96ce-6f79-4cf9-aa74-a3128cccc15e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\:0441", ",", "a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.780750815794992*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"15f00c2b-8257-44a6-8fd3-87de5ab6cbf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7807449048493567`*^9, 
  3.780744934525777*^9}},ExpressionUUID->"a8218f0b-d9e7-4ab5-8465-\
78a97078d10c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["A", "5"], " ", 
  SuperscriptBox["and", "10"], " ", 
  SuperscriptBox["B", "5"], " ", 
  SuperscriptBox["C", "5"], " ", 
  SuperscriptBox["not", "8"], " ", 
  SuperscriptBox["or", "4"], " ", "simplify"}]], "Output",
 CellChangeTimes->{{3.780744917339416*^9, 3.780744920411104*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"b04c4674-4ae9-43fd-9675-0699b66d95c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7807449251905117`*^9, {3.780750590231456*^9, 
   3.780750591324544*^9}},ExpressionUUID->"a963429d-bb73-4a2f-bafc-\
333c6430064a"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "simplify ((not A and not B and C) or (not A and B and not C) or (not A \
and B and C) or (A and not B and not C) or (A and B and not C))", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "2"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Simplify[( !A &&  !B && C) || ( !A && B &&  !C) || ( !A && B && C) \
|| (A &&  !B &&  !C) || (A && B &&  !C)]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"simplify\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "A"}], "\[And]", 
                    RowBox[{"\[Not]", "B"}], "\[And]", "C"}], ")"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "A"}], "\[And]", "B", "\[And]", 
                    RowBox[{"\[Not]", "C"}]}], ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "A"}], "\[And]", "B", "\[And]", "C"}], 
                    ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[And]", 
                    RowBox[{"\[Not]", "B"}], "\[And]", 
                    RowBox[{"\[Not]", "C"}]}], ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[And]", "B", "\[And]", 
                    RowBox[{"\[Not]", "C"}]}], ")"}]}], ScriptLevel -> 0, 
                    StripOnInput -> False]}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Simplify[( !A &&  !B && C) || ( !A && B &&  !C) || ( !A && B && C) \
|| (A &&  !B &&  !C) || (A && B &&  !C)]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"(\"", "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["A", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["B", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], 
              StyleBox["C", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"O\"", 14, StripOnInput -> False], 
                  StyleBox["\"R \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["A", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], 
              StyleBox["B", Italic, 14, StripOnInput -> False], 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["C", Italic, 14, StripOnInput -> False], "\")\"", 
              "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"O\"", 14, StripOnInput -> False], 
                  StyleBox["\"R \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["A", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], 
              StyleBox["B", Italic, 14, StripOnInput -> False], 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], 
              StyleBox["C", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"O\"", 14, StripOnInput -> False], 
                  StyleBox["\"R \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              StyleBox["A", Italic, 14, StripOnInput -> False], 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["B", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["C", Italic, 14, StripOnInput -> False], "\")\"", 
              "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"O\"", 14, StripOnInput -> False], 
                  StyleBox["\"R \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              StyleBox["A", Italic, 14, StripOnInput -> False], 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], 
              StyleBox["B", Italic, 14, StripOnInput -> False], 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["C", Italic, 14, StripOnInput -> False], "\")\"", 
              "\")\""}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "3"}, {
       XMLElement[
       "info", {"text" -> "\[Not]expr is the logical NOT function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Not.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NOT.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[And] e_2 \[And] ... is the logical AND function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/And.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AND.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[Or] e_2 \[Or] ... is the logical OR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Boolean", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"\[Not]", 
                RowBox[{"(", 
                  RowBox[{"A", "\[And]", "C"}], ")"}]}], "\[And]", 
              RowBox[{"(", 
                RowBox[{"A", "\[Or]", "B", "\[Or]", "C"}], ")"}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Minimal forms", "scanner" -> "Boolean", "id" -> 
     "MinimalForms", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"DNF\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"CNF\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], "\[Or]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False], "\[Or]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"ANF\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Xor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Xor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Xor]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[Xor]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[Xor]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 11, 
                    SpanMaxSize -> 0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"NOR\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[Nor]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Nor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[Nor]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[Nor]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"NAND\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[Nand]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Nand]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[Nand]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Nand]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[Nand]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"AND\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], "\[And]", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                    TagBox[
                    PaneBox[
                    "\"OR\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], "\[Or]", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], "\[Or]", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}},
                    GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"assuming NAND and NOR are n\[Hyphen]ary operators\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "MinimalForms__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "MinimalForms__Text notation"}, {}]}], 
     XMLElement["infos", {"count" -> "3"}, {
       XMLElement[
       "info", {
        "text" -> "e_1 \[Xor] e_2 \[Xor] ... is the logical XOR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Xor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/XOR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[Nor] e_2 \[Nor] ... is the logical NOR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Nor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NOR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> 
         "e_1 \[Nand] e_2 \[Nand] ... is the logical NAND function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Nand.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NAND.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Other forms", "scanner" -> "Boolean", "id" -> 
     "OtherForms", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"ESOP\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Xor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["B", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Xor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ITE\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["A", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["A", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["C", Italic, 14, StripOnInput -> False], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["C", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    StyleBox["B", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], ")"}]}], ")"}]}], 11, SpanMaxSize -> 0, 
                  StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "OtherForms__Text notation"}, {}]}]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Truth table", "scanner" -> "Boolean", "id" -> 
     "TruthTable", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "BooleanTable[( !A &&  !B && C) || ( !A && B &&  !C) || ( !A && B && \
C) || (A &&  !B &&  !C) || (A && B &&  !C), {A, B, C}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "A", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "B", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "C", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "A"}], "\[And]", 
                    RowBox[{"\[Not]", "B"}], "\[And]", "C"}], ")"}], "\[Or]", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "A"}], "\[And]", "B", "\[And]", 
                    RowBox[{"\[Not]", "C"}]}], ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "A"}], "\[And]", "B", "\[And]", "C"}], 
                    ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[And]", 
                    RowBox[{"\[Not]", "B"}], "\[And]", 
                    RowBox[{"\[Not]", "C"}]}], ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{"A", "\[And]", "B", "\[And]", 
                    RowBox[{"\[Not]", "C"}]}], ")"}]}], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Left}, "Rows" -> {{Baseline}},
                  "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}, {1, 
                    4} -> {Center, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Logic circuit", "scanner" -> "Boolean", "id" -> 
     "LogicCircuit", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                
                LineBox[{{1.3125393573086606`, 3.223950213427199}, {
                 1.3559282132570816`, 3.223950213427199}}], 
                
                LineBox[{{1.3125393573086606`, 3.3239502134271985`}, {
                 1.3559282132570816`, 3.3239502134271985`}}], 
                
                CircleBox[{1.2219571945770928`, 3.2739502134271987`}, {
                 0.13587324409735152`, 0.3}, 
                 NCache[{2 Pi - ArcSin[
                    Rational[1, 3]], 2 Pi + ArcSin[
                    Rational[1, 3]]}, {5.943348397725464, 
                  6.623022216633708}]], 
                
                CircleBox[{1.3433497929758507`, 3.4919082134271986`}, {
                 0.1441633236305446, 
                 0.31830400000000003`}, {-1.52424, -0.7542}], 
                
                CircleBox[{1.3433372926373937`, 3.0559502134271987`}, {
                 0.1441633236305446, 0.31830400000000003`}, {0.75426, 
                 1.52424}], 
                
                LineBox[{{1.4484126014060121`, 3.2739502134271987`}, {
                 1.493703682771796, 3.2739502134271987`}}]}, {
                
                LineBox[{{0.8448321839619177, 6.030193253507655}, {
                 0.8901232653277016, 6.030193253507655}, {0.8901232653277016, 
                 5.980193253507655}, {0.9354143466934854, 
                 5.980193253507655}}], 
                
                LineBox[{{0.8448321839619177, 6.130193253507654}, {
                 0.8901232653277016, 6.130193253507654}, {0.8901232653277016, 
                 6.180193253507654}, {0.9354143466934854, 
                 6.180193253507654}}], 
                
                CircleBox[{0.9354143466934854, 6.080193253507654}, {
                 0.04529108136578384, 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{0.8901232653277016, 6.030193253507655}, {
                 0.8901232653277016, 6.130193253507654}}], 
                
                LineBox[{{0.9807054280592693, 6.080193253507654}, {
                 1.0259965094250532`, 6.080193253507654}}]}, {
                
                LineBox[{{0.37712501061517506`, 6.547900426854397}, {
                 0.4055678097128873, 6.547900426854397}}], 
                
                LineBox[{{0.5039400384393697, 6.547900426854397}, {
                 0.4055678097128873, 6.447900426854398}, {0.4055678097128873, 
                 6.647900426854397}, {0.5039400384393697, 
                 6.547900426854397}}], 
                
                CircleBox[{0.5220564709856833, 6.547900426854397}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.5401729035319969, 6.547900426854397}, {
                 0.5582893360783104, 6.547900426854397}}]}, {
                
                LineBox[{{0.07246573018525414, 6.547900426854397}, {
                 0.09058216273156768, 6.547900426854397}}], 
                InsetBox[
                 FormBox[
                  TagBox["A", HoldForm], TraditionalForm], {0., 
                 6.547900426854397}]}, {
                
                LineBox[{{0.37712501061517506`, 6.080193253507654}, {
                 0.4055678097128873, 6.080193253507654}}], 
                
                LineBox[{{0.5039400384393697, 6.080193253507654}, {
                 0.4055678097128873, 5.980193253507655}, {0.4055678097128873, 
                 6.180193253507654}, {0.5039400384393697, 
                 6.080193253507654}}], 
                
                CircleBox[{0.5220564709856833, 6.080193253507654}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.5401729035319969, 6.080193253507654}, {
                 0.5582893360783104, 6.080193253507654}}]}, {
                
                LineBox[{{0.07246573018525414, 6.080193253507654}, {
                 0.09058216273156768, 6.080193253507654}}], 
                InsetBox[
                 FormBox[
                  TagBox["B", HoldForm], TraditionalForm], {0., 
                 6.080193253507654}]}, {
                
                LineBox[{{0.540172903531997, 5.612486080160912}, {
                 0.5582893360783105, 5.612486080160912}}], 
                InsetBox[
                 FormBox[
                  TagBox["C", HoldForm], TraditionalForm], {
                 0.46770717334674283`, 5.612486080160912}]}, {
                
                LineBox[{{0.8448321839619177, 4.627071733467427}, {
                 0.8901232653277016, 4.627071733467427}, {0.8901232653277016, 
                 4.577071733467427}, {0.9354143466934854, 
                 4.577071733467427}}], 
                
                LineBox[{{0.8448321839619177, 4.727071733467427}, {
                 0.8901232653277016, 4.727071733467427}, {0.8901232653277016, 
                 4.777071733467427}, {0.9354143466934854, 
                 4.777071733467427}}], 
                
                CircleBox[{0.9354143466934854, 4.677071733467427}, {
                 0.04529108136578384, 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{0.8901232653277016, 4.627071733467427}, {
                 0.8901232653277016, 4.727071733467427}}], 
                
                LineBox[{{0.9807054280592693, 4.677071733467427}, {
                 1.0259965094250532`, 4.677071733467427}}]}, {
                
                LineBox[{{0.37712501061517517`, 5.144778906814169}, {
                 0.4055678097128874, 5.144778906814169}}], 
                
                LineBox[{{0.5039400384393699, 5.144778906814169}, {
                 0.4055678097128874, 5.0447789068141695`}, {
                 0.4055678097128874, 5.244778906814169}, {0.5039400384393699, 
                 5.144778906814169}}], 
                
                CircleBox[{0.5220564709856834, 5.144778906814169}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.540172903531997, 5.144778906814169}, {
                 0.5582893360783105, 5.144778906814169}}]}, {
                
                LineBox[{{0.07246573018525414, 5.144778906814169}, {
                 0.09058216273156768, 5.144778906814169}}], 
                InsetBox[
                 FormBox[
                  TagBox["A", HoldForm], TraditionalForm], {0., 
                 5.144778906814169}]}, {
                
                LineBox[{{0.540172903531997, 4.677071733467427}, {
                 0.5582893360783105, 4.677071733467427}}], 
                InsetBox[
                 FormBox[
                  TagBox["B", HoldForm], TraditionalForm], {
                 0.46770717334674283`, 4.677071733467427}]}, {
                
                LineBox[{{0.37712501061517517`, 4.209364560120685}, {
                 0.4055678097128874, 4.209364560120685}}], 
                
                LineBox[{{0.5039400384393699, 4.209364560120685}, {
                 0.4055678097128874, 4.109364560120685}, {0.4055678097128874, 
                 4.3093645601206845`}, {0.5039400384393699, 
                 4.209364560120685}}], 
                
                CircleBox[{0.5220564709856834, 4.209364560120685}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.540172903531997, 4.209364560120685}, {
                 0.5582893360783105, 4.209364560120685}}]}, {
                
                LineBox[{{0.07246573018525436, 4.209364560120685}, {
                 0.0905821627315679, 4.209364560120685}}], 
                InsetBox[
                 FormBox[
                  TagBox["C", HoldForm], TraditionalForm], {
                 2.220446049250313*^-16, 4.209364560120685}]}, {
                
                LineBox[{{0.844832183961918, 3.223950213427199}, {
                 0.8901232653277018, 3.223950213427199}, {0.8901232653277018, 
                 3.1739502134271986`}, {0.9354143466934857, 
                 3.1739502134271986`}}], 
                
                LineBox[{{0.844832183961918, 3.3239502134271985`}, {
                 0.8901232653277018, 3.3239502134271985`}, {
                 0.8901232653277018, 3.373950213427199}, {0.9354143466934857, 
                 3.373950213427199}}], 
                
                CircleBox[{0.9354143466934857, 3.2739502134271987`}, {
                 0.04529108136578384, 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{0.8901232653277018, 3.223950213427199}, {
                 0.8901232653277018, 3.3239502134271985`}}], 
                
                LineBox[{{0.9807054280592695, 3.2739502134271987`}, {
                 1.0259965094250534`, 3.2739502134271987`}}]}, {
                
                LineBox[{{0.3771250106151753, 3.7416573867739413`}, {
                 0.40556780971288753`, 3.7416573867739413`}}], 
                
                LineBox[{{0.50394003843937, 3.7416573867739413`}, {
                 0.40556780971288753`, 3.6416573867739412`}, {
                 0.40556780971288753`, 3.8416573867739414`}, {
                 0.50394003843937, 3.7416573867739413`}}], 
                
                CircleBox[{0.5220564709856835, 3.7416573867739413`}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.5401729035319971, 3.7416573867739413`}, {
                 0.5582893360783107, 3.7416573867739413`}}]}, {
                
                LineBox[{{0.07246573018525436, 3.7416573867739413`}, {
                 0.0905821627315679, 3.7416573867739413`}}], 
                InsetBox[
                 FormBox[
                  TagBox["A", HoldForm], TraditionalForm], {
                 2.220446049250313*^-16, 3.7416573867739413`}]}, {
                
                LineBox[{{0.5401729035319971, 3.2739502134271987`}, {
                 0.5582893360783107, 3.2739502134271987`}}], 
                InsetBox[
                 FormBox[
                  TagBox["B", HoldForm], TraditionalForm], {
                 0.46770717334674294`, 3.2739502134271987`}]}, {
                
                LineBox[{{0.5401729035319971, 2.806243040080456}, {
                 0.5582893360783107, 2.806243040080456}}], 
                InsetBox[
                 FormBox[
                  TagBox["C", HoldForm], TraditionalForm], {
                 0.46770717334674294`, 2.806243040080456}]}, {
                
                LineBox[{{0.844832183961918, 1.8208286933869713`}, {
                 0.8901232653277018, 1.8208286933869713`}, {
                 0.8901232653277018, 1.7708286933869712`}, {
                 0.9354143466934857, 1.7708286933869712`}}], 
                
                LineBox[{{0.844832183961918, 1.9208286933869714`}, {
                 0.8901232653277018, 1.9208286933869714`}, {
                 0.8901232653277018, 1.9708286933869714`}, {
                 0.9354143466934857, 1.9708286933869714`}}], 
                
                CircleBox[{0.9354143466934857, 1.8708286933869713`}, {
                 0.04529108136578384, 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{0.8901232653277018, 1.8208286933869713`}, {
                 0.8901232653277018, 1.9208286933869714`}}], 
                
                LineBox[{{0.9807054280592695, 1.8708286933869713`}, {
                 1.0259965094250534`, 1.8708286933869713`}}]}, {
                
                LineBox[{{0.5401729035319971, 2.3385358667337135`}, {
                 0.5582893360783107, 2.3385358667337135`}}], 
                InsetBox[
                 FormBox[
                  TagBox["A", HoldForm], TraditionalForm], {
                 0.46770717334674294`, 2.3385358667337135`}]}, {
                
                LineBox[{{0.3771250106151754, 1.8708286933869713`}, {
                 0.40556780971288764`, 1.8708286933869713`}}], 
                
                LineBox[{{0.5039400384393701, 1.8708286933869713`}, {
                 0.40556780971288764`, 1.7708286933869712`}, {
                 0.40556780971288764`, 1.9708286933869714`}, {
                 0.5039400384393701, 1.8708286933869713`}}], 
                
                CircleBox[{0.5220564709856836, 1.8708286933869713`}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.5401729035319972, 1.8708286933869713`}, {
                 0.5582893360783108, 1.8708286933869713`}}]}, {
                
                LineBox[{{0.07246573018525436, 1.8708286933869713`}, {
                 0.0905821627315679, 1.8708286933869713`}}], 
                InsetBox[
                 FormBox[
                  TagBox["B", HoldForm], TraditionalForm], {
                 2.220446049250313*^-16, 1.8708286933869713`}]}, {
                LineBox[{{0.3771250106151754, 1.4031215200402283`}, {
                 0.40556780971288764`, 1.4031215200402283`}}], 
                
                LineBox[{{0.5039400384393701, 1.4031215200402283`}, {
                 0.40556780971288764`, 1.3031215200402282`}, {
                 0.40556780971288764`, 1.5031215200402284`}, {
                 0.5039400384393701, 1.4031215200402283`}}], 
                
                CircleBox[{0.5220564709856836, 1.4031215200402283`}, {
                 0.018116432546313534`, 0.04}], 
                
                LineBox[{{0.5401729035319972, 1.4031215200402283`}, {
                 0.5582893360783108, 1.4031215200402283`}}]}, {
                
                LineBox[{{0.07246573018525458, 1.4031215200402283`}, {
                 0.09058216273156812, 1.4031215200402283`}}], 
                InsetBox[
                 FormBox[
                  TagBox["C", HoldForm], TraditionalForm], {
                 4.440892098500626*^-16, 1.4031215200402283`}]}, {
                
                LineBox[{{0.8448321839619181, 0.41770717334674307`}, {
                 0.8901232653277019, 0.41770717334674307`}, {
                 0.8901232653277019, 0.3677071733467431}, {0.9354143466934858,
                  0.3677071733467431}}], 
                
                LineBox[{{0.8448321839619181, 0.5177071733467431}, {
                 0.8901232653277019, 0.5177071733467431}, {0.8901232653277019,
                  0.567707173346743}, {0.9354143466934858, 
                 0.567707173346743}}], 
                
                CircleBox[{0.9354143466934858, 0.46770717334674305`}, {
                 0.04529108136578384, 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{0.8901232653277019, 0.41770717334674307`}, {
                 0.8901232653277019, 0.5177071733467431}}], 
                
                LineBox[{{0.9807054280592696, 0.46770717334674305`}, {
                 1.0259965094250534`, 0.46770717334674305`}}]}, {
                
                LineBox[{{0.5401729035319972, 0.9354143466934852}, {
                 0.5582893360783108, 0.9354143466934852}}], 
                InsetBox[
                 FormBox[
                  TagBox["A", HoldForm], TraditionalForm], {
                 0.46770717334674305`, 0.9354143466934852}]}, {
                LineBox[{{0.5401729035319973, 0.46770717334674305`}, {
                 0.5582893360783109, 0.46770717334674305`}}], 
                InsetBox[
                 FormBox[
                  TagBox["B", HoldForm], TraditionalForm], {
                 0.46770717334674317`, 0.46770717334674305`}]}, {
                
                LineBox[{{0.3771250106151755, 0.}, {0.40556780971288775`, 
                 0.}}], 
                
                LineBox[{{0.5039400384393702, 0.}, {
                 0.40556780971288775`, -0.1}, {0.40556780971288775`, 0.1}, {
                 0.5039400384393702, 0.}}], 
                
                CircleBox[{0.5220564709856838, 0.}, {0.018116432546313534`, 
                 0.04}], 
                
                LineBox[{{0.5401729035319973, 0.}, {0.5582893360783109, 
                 0.}}]}, {
                
                LineBox[{{0.07246573018525458, 0.}, {0.09058216273156812, 
                 0.}}], 
                InsetBox[
                 FormBox[
                  TagBox["C", HoldForm], TraditionalForm], {
                 4.440892098500626*^-16, 0.}]}}, {
               
               LineBox[{{{1.3125393573086606`, 3.223950213427199}, {
                1.0259965094250534`, 0.46770717334674305`}}, {{
                1.3125393573086606`, 3.248950213427199}, {1.0259965094250534`,
                 1.8708286933869713`}}, {{1.3125393573086606`, 
                3.2739502134271987`}, {1.0259965094250534`, 
                3.2739502134271987`}}, {{1.3125393573086606`, 
                3.2989502134271986`}, {1.0259965094250532`, 
                4.677071733467427}}, {{1.3125393573086606`, 
                3.3239502134271985`}, {1.0259965094250532`, 
                6.080193253507654}}}], 
               
               LineBox[{{{0.8448321839619177, 6.030193253507655}, {
                0.5582893360783105, 5.612486080160912}}, {{0.8448321839619177,
                 6.080193253507654}, {0.5582893360783104, 
                6.080193253507654}}, {{0.8448321839619177, 
                6.130193253507654}, {0.5582893360783104, 
                6.547900426854397}}}], 
               
               LineBox[{{0.37712501061517506`, 6.547900426854397}, {
                0.09058216273156768, 6.547900426854397}}], {}, 
               
               LineBox[{{0.37712501061517506`, 6.080193253507654}, {
                0.09058216273156768, 6.080193253507654}}], {}, {}, 
               LineBox[{{{0.8448321839619177, 4.627071733467427}, {
                0.5582893360783105, 4.209364560120685}}, {{0.8448321839619177,
                 4.677071733467427}, {0.5582893360783105, 
                4.677071733467427}}, {{0.8448321839619177, 
                4.727071733467427}, {0.5582893360783105, 
                5.144778906814169}}}], 
               
               LineBox[{{0.37712501061517517`, 5.144778906814169}, {
                0.09058216273156768, 5.144778906814169}}], {}, {}, 
               
               LineBox[{{0.37712501061517517`, 4.209364560120685}, {
                0.0905821627315679, 4.209364560120685}}], {}, 
               
               LineBox[{{{0.844832183961918, 3.223950213427199}, {
                0.5582893360783107, 2.806243040080456}}, {{0.844832183961918, 
                3.2739502134271987`}, {0.5582893360783107, 
                3.2739502134271987`}}, {{0.844832183961918, 
                3.3239502134271985`}, {0.5582893360783107, 
                3.7416573867739413`}}}], 
               
               LineBox[{{0.3771250106151753, 3.7416573867739413`}, {
                0.0905821627315679, 3.7416573867739413`}}], {}, {}, {}, 
               
               LineBox[{{{0.844832183961918, 1.8208286933869713`}, {
                0.5582893360783108, 1.4031215200402283`}}, {{
                0.844832183961918, 1.8708286933869713`}, {0.5582893360783108, 
                1.8708286933869713`}}, {{0.844832183961918, 
                1.9208286933869714`}, {0.5582893360783107, 
                2.3385358667337135`}}}], {}, 
               
               LineBox[{{0.3771250106151754, 1.8708286933869713`}, {
                0.0905821627315679, 1.8708286933869713`}}], {}, 
               
               LineBox[{{0.3771250106151754, 1.4031215200402283`}, {
                0.09058216273156812, 1.4031215200402283`}}], {}, 
               
               LineBox[{{{0.8448321839619181, 0.41770717334674307`}, {
                0.5582893360783109, 0.}}, {{0.8448321839619181, 
                0.46770717334674305`}, {0.5582893360783109, 
                0.46770717334674305`}}, {{0.8448321839619181, 
                0.5177071733467431}, {0.5582893360783108, 
                0.9354143466934852}}}], {}, {}, 
               
               LineBox[{{0.3771250106151755, 0.}, {0.09058216273156812, 
                0.}}], {}}}, AspectRatio -> 0.4529108136578383, ImageSize -> 
             NCache[
               Rational[550, 3], 183.33333333333334`]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Truth density", "scanner" -> "Boolean", "id" -> 
     "TruthDensity", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               FractionBox["5", "8"], "=", 
               TemplateBox[{"62.5`", "\"%\""}, "RowDefault"]}], HoldForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Boolean operator number", "scanner" -> "Boolean", "id" -> 
     "BooleanOperatorNumber", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FromDigits[Boole[BooleanTable[( !A &&  !B && C) || ( !A && B &&  !C) \
|| ( !A && B && C) || (A &&  !B &&  !C) || (A && B &&  !C), {A, B, C}]], \
2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"94", 
              StyleBox["\" with variable ordering \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"A", ",", "B", ",", "C"}], "}"}], 
               GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Rule 94 elementary cellular automaton evolution", 
     "scanner" -> "Boolean", "id" -> "BooleanRuleECAEvolution", "position" -> 
     "900", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJzt1jFKA0EYR/GFgIVtCGrAQvAGVhYyhYW9paVgLVhp4QU8gVcR9BKCYuEF
JAQED6DRG2wx5vtmfoGF8HhsMbM8/nvnl6cXk2EY5qvnYPX8/v/+2Nh8nC7K
y/718Xz2XnYPn3e2b57KWD78/T7L0dfV2+3Jspw9bN3P7l75fD5/tF+7P1nO
gc/n5/XHvmcst9/4fP66+lCb6xifz8/Sq9p9y3IvfH7Pfqu9qt23aPfI5/fs
99ar2n3Lcu98fmRfr2L2Ldp3wudH9vUqV9+yfFd8vn2F6xi/Z1+v2ub2Gz+j
r1e4/cbP7usVbr/xo/l6hUfgOsa3r/BWuf3Wp69XeA9cx9r29QrvmdtvMX29
wnH7LbuvVzgep29ZulHb1yscj891zL7C8VZ5q/tNr3Acb7Vj0c4Zx/H4fbOv
cBzPwtfVsWjngON4e9y+wnG8Va5X+H/yH0k1+Cg=
                "], {{0, 0}, {51, 
                26}}, {0, 1}], {{Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 26}, {51, 26}}, {{0, 25}, {51, 25}}, {{0, 
                  24}, {51, 24}}, {{0, 23}, {51, 23}}, {{0, 22}, {51, 22}}, {{
                  0, 21}, {51, 21}}, {{0, 20}, {51, 20}}, {{0, 19}, {51, 
                  19}}, {{0, 18}, {51, 18}}, {{0, 17}, {51, 17}}, {{0, 16}, {
                  51, 16}}, {{0, 15}, {51, 15}}, {{0, 14}, {51, 14}}, {{0, 
                  13}, {51, 13}}, {{0, 12}, {51, 12}}, {{0, 11}, {51, 11}}, {{
                  0, 10}, {51, 10}}, {{0, 9}, {51, 9}}, {{0, 8}, {51, 8}}, {{
                  0, 7}, {51, 7}}, {{0, 6}, {51, 6}}, {{0, 5}, {51, 5}}, {{0, 
                  4}, {51, 4}}, {{0, 3}, {51, 3}}, {{0, 2}, {51, 2}}, {{0, 
                  1}, {51, 1}}, {{0, 0}, {51, 0}}}]}, {
                Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 0}, {0, 26}}, {{1, 0}, {1, 26}}, {{2, 0}, {2, 
                  26}}, {{3, 0}, {3, 26}}, {{4, 0}, {4, 26}}, {{5, 0}, {5, 
                  26}}, {{6, 0}, {6, 26}}, {{7, 0}, {7, 26}}, {{8, 0}, {8, 
                  26}}, {{9, 0}, {9, 26}}, {{10, 0}, {10, 26}}, {{11, 0}, {11,
                   26}}, {{12, 0}, {12, 26}}, {{13, 0}, {13, 26}}, {{14, 0}, {
                  14, 26}}, {{15, 0}, {15, 26}}, {{16, 0}, {16, 26}}, {{17, 
                  0}, {17, 26}}, {{18, 0}, {18, 26}}, {{19, 0}, {19, 26}}, {{
                  20, 0}, {20, 26}}, {{21, 0}, {21, 26}}, {{22, 0}, {22, 
                  26}}, {{23, 0}, {23, 26}}, {{24, 0}, {24, 26}}, {{25, 0}, {
                  25, 26}}, {{26, 0}, {26, 26}}, {{27, 0}, {27, 26}}, {{28, 
                  0}, {28, 26}}, {{29, 0}, {29, 26}}, {{30, 0}, {30, 26}}, {{
                  31, 0}, {31, 26}}, {{32, 0}, {32, 26}}, {{33, 0}, {33, 
                  26}}, {{34, 0}, {34, 26}}, {{35, 0}, {35, 26}}, {{36, 0}, {
                  36, 26}}, {{37, 0}, {37, 26}}, {{38, 0}, {38, 26}}, {{39, 
                  0}, {39, 26}}, {{40, 0}, {40, 26}}, {{41, 0}, {41, 26}}, {{
                  42, 0}, {42, 26}}, {{43, 0}, {43, 26}}, {{44, 0}, {44, 
                  26}}, {{45, 0}, {45, 26}}, {{46, 0}, {46, 26}}, {{47, 0}, {
                  47, 26}}, {{48, 0}, {48, 26}}, {{49, 0}, {49, 26}}, {{50, 
                  0}, {50, 26}}, {{51, 0}, {51, 26}}}]}}}, AxesStyle -> 
              Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
              False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Automatic, ImageSize -> NCache[{
                 Rational[583, 2], 140}, {291.5, 140}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                Automatic}], Alignment -> {Left, Center}, ImageSize -> 550], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "9", "datatypes" -> 
    "Simplify", "timedout" -> "", "timedoutpods" -> "", "timing" -> "4.291", 
    "parsetiming" -> "3.052", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP961612caa9d2ach868df00005294ec429651d465", "host" -> 
    "https://www4f.wolframalpha.com", "server" -> "13", "related" -> 
    "https://www4f.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa961712caa9d2ach868df00001d7235adhhbfgd389033684486377260567", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2019, 10, 22, 17, 55, 31.47169`8.250495045447117}, "Line" -> 
    42, "SessionID" -> 17602646018418589660}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = 
   "simplify ((not A and not B and C) or (not A and B and not C) or (not A \
and B and C) or (A and not B and not C) or (A and B and not C))"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1373., {699., 704.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.780744931644986*^9},ExpressionUUID->"818f0491-f661-4426-a840-\
a814863ca62c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", " ", "to", " ", "binary"}]], "Input",
 CellChangeTimes->{{3.780745451459827*^9, 3.780745457673533*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e506e9de-cdf3-4244-b0dc-e168b8454166"],

Cell[BoxData[
 RowBox[{"3", " ", "binary", " ", "to"}]], "Output",
 CellChangeTimes->{3.7807454588573103`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"ae698c48-206c-439d-8616-f4939419dfa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["21 to binary", "WolframAlphaLong",
 CellChangeTimes->{{3.780748036374454*^9, 3.780748048861809*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"c6dcb0e8-31dd-44e5-a75e-b61c10c0df08"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "21 to binary", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Result__Step-by-step solution"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               StyleBox["\"convert\"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               TemplateBox[{"\" \"", "21", "\" \""}, "RowDefault"], 
               StyleBox["\"to\"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               TemplateBox[{"\" \"", 
                 RowBox[{"base", "2"}]}, "RowDefault"]}, "RowDefault"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Results", "scanner" -> "NumberSystems", "id" -> 
     "Result", "position" -> "100", "error" -> "false", "numsubpods" -> "2", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"10101\"", "2"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{"\"Convert the following to base \"", "2"}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    SubscriptBox["\"21\"", "\"10\""]}, "RowDefault"], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"powers \"", "\"of \"", 
                    TemplateBox[{"2", "\" \""}, "RowDefault"], "\"that \"", 
                    "\"will \"", "\"be \"", "\"used \"", "\"as \"", 
                    "\"the \"", "\"places \"", "\"of \"", "\"the \"", 
                    "\"digits \"", "\"in \"", "\"the \"", 
                    
                    TemplateBox[{"\"base\[Hyphen]\"", "2", "\" \""}, 
                    "RowDefault"], "\"representation \"", "\"of \"", "21"}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    
                    GridBox[{{
                    "\"Power\"", 
                    "\"\\!\\(\\*SuperscriptBox[\\(Base\\), \\(Power\\)]\\)\"",
                     "\"Place value\""}, {"5", 
                    TagBox[
                    SuperscriptBox["2", "5"], HoldForm], "32"}, {"4", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], "16"}, {"3", 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], "8"}, {"2", 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], "4"}, {"1", 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], "2"}, {"0", 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "1"}}, 
                    GridBoxAlignment -> {"Rows" -> {{Baseline}}}, AutoDelete -> 
                    False, GridBoxDividers -> {"Columns" -> {True, True, 
                    Directive[
                    Thickness[Large]]}, "Rows" -> {True, {}, True}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, FrameStyle -> 
                    GrayLevel[0.5]], "Grid"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Label \"", "\"each \"", "\"place \"", "\"of \"", 
                    "\"the \"", 
                    
                    TemplateBox[{"\"base\[Hyphen]\"", "2", "\" \""}, 
                    "RowDefault"], "\"representation \"", "\"of \"", 
                    "\"21 \"", "\"with \"", "\"the \"", "\"appropriate \"", 
                    "\"power \"", "\"of \"", "2"}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{"\"Place\"", "\" \"", "\" \"", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "\" \""}, {
                    "\" \"", "\" \"", "\" \"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", "\" \""}, {
                    SubscriptBox["21", "10"], "\"=\"", "\"(\"", "\"__\"", 
                    "\"__\"", "\"__\"", "\"__\"", "\"__\"", 
                    SubscriptBox["\")\"", 
                    SubscriptBox["\"\"", "2"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}], "Grid"]}, 
                    "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"value \"", "\"of \"", 
                    "\"the \"", "\"first \"", "\"digit \"", "\"from \"", 
                    "\"the \"", "\"right \"", "\"of \"", "\"21 \"", "\"in \"",
                     "\"base \"", "2"}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox["21", "2"], "=", "10"}], HoldForm], "\" \""}, 
                    "RowDefault"]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"with remainder\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    FrameBox[
                    TagBox["1", HoldForm], FrameStyle -> GrayLevel[0.8], 
                    FrameMargins -> 1, BaselinePosition -> Baseline, 
                    ContentPadding -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TagBox[
                    GridBox[{{"\"Place\"", "\" \"", "\" \"", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "\" \""}, {
                    "\" \"", "\" \"", "\" \"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", "\" \""}, {
                    SubscriptBox["21", "10"], "\"=\"", "\"(\"", "\"__\"", 
                    "\"__\"", "\"__\"", "\"__\"", "1", 
                    SubscriptBox["\")\"", 
                    SubscriptBox["\"\"", "2"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None, 
                    "ItemsIndexed" -> {{{1, 3}, {-2, -2}} -> {
                    GrayLevel[0.5]}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxItemStyle -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}, 
                    "ItemsIndexed" -> {{{1, 3}, {-1, -2}} -> {
                    GrayLevel[0.5]}}}], "Grid"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"value \"", "\"of \"", 
                    "\"the \"", "\"next \"", "\"digit \"", "\"from \"", 
                    "\"the \"", "\"right \"", "\"of \"", "\"21 \"", "\"in \"",
                     "\"base \"", "2"}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox["10", "2"], "=", "5"}], HoldForm], "\" \""}, 
                    "RowDefault"]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"with remainder\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    FrameBox[
                    TagBox["0", HoldForm], FrameStyle -> GrayLevel[0.8], 
                    FrameMargins -> 1, BaselinePosition -> Baseline, 
                    ContentPadding -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TagBox[
                    GridBox[{{"\"Place\"", "\" \"", "\" \"", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "\" \""}, {
                    "\" \"", "\" \"", "\" \"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", "\" \""}, {
                    SubscriptBox["21", "10"], "\"=\"", "\"(\"", "\"__\"", 
                    "\"__\"", "\"__\"", "0", "1", 
                    SubscriptBox["\")\"", 
                    SubscriptBox["\"\"", "2"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None, 
                    "ItemsIndexed" -> {{{1, 3}, {-3, -3}} -> {
                    GrayLevel[0.5]}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxItemStyle -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}, 
                    "ItemsIndexed" -> {{{1, 3}, {-2, -2}} -> {
                    GrayLevel[0.5]}}}], "Grid"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"value \"", "\"of \"", 
                    "\"the \"", "\"next \"", "\"digit \"", "\"from \"", 
                    "\"the \"", "\"right \"", "\"of \"", "\"21 \"", "\"in \"",
                     "\"base \"", "2"}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox["5", "2"], "=", "2"}], HoldForm], "\" \""}, 
                    "RowDefault"]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"with remainder\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    FrameBox[
                    TagBox["1", HoldForm], FrameStyle -> GrayLevel[0.8], 
                    FrameMargins -> 1, BaselinePosition -> Baseline, 
                    ContentPadding -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TagBox[
                    GridBox[{{"\"Place\"", "\" \"", "\" \"", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "\" \""}, {
                    "\" \"", "\" \"", "\" \"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", "\" \""}, {
                    SubscriptBox["21", "10"], "\"=\"", "\"(\"", "\"__\"", 
                    "\"__\"", "1", "0", "1", 
                    SubscriptBox["\")\"", 
                    SubscriptBox["\"\"", "2"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None, 
                    "ItemsIndexed" -> {{{1, 3}, {-4, -4}} -> {
                    GrayLevel[0.5]}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxItemStyle -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}, 
                    "ItemsIndexed" -> {{{1, 3}, {-3, -2}} -> {
                    GrayLevel[0.5]}}}], "Grid"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"value \"", "\"of \"", 
                    "\"the \"", "\"next \"", "\"digit \"", "\"from \"", 
                    "\"the \"", "\"right \"", "\"of \"", "\"21 \"", "\"in \"",
                     "\"base \"", "2"}, "RowDefault"], "\":\""}, 
                    "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox["2", "2"], "=", "1"}], HoldForm], "\" \""}, 
                    "RowDefault"]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"with remainder\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    FrameBox[
                    TagBox["0", HoldForm], FrameStyle -> GrayLevel[0.8], 
                    FrameMargins -> 1, BaselinePosition -> Baseline, 
                    ContentPadding -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TagBox[
                    GridBox[{{"\"Place\"", "\" \"", "\" \"", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "\" \""}, {
                    "\" \"", "\" \"", "\" \"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", "\" \""}, {
                    SubscriptBox["21", "10"], "\"=\"", "\"(\"", "\"__\"", "0",
                     "1", "0", "1", 
                    SubscriptBox["\")\"", 
                    SubscriptBox["\"\"", "2"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None, 
                    "ItemsIndexed" -> {{{1, 3}, {-5, -5}} -> {
                    GrayLevel[0.5]}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxItemStyle -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}, 
                    "ItemsIndexed" -> {{{1, 3}, {-4, -2}} -> {
                    GrayLevel[0.5]}}}], "Grid"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Determine \"", "\"the \"", "\"value \"", "\"of \"", 
                    "\"the \"", "\"last \"", "\"remaining \"", "\"digit \"", 
                    "\"of \"", "\"21 \"", "\"in \"", "\"base \"", "2"}, 
                    "RowDefault"], "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    FractionBox["1", "2"], "=", "0"}], HoldForm], "\" \""}, 
                    "RowDefault"]}, "RowDefault"], 
                    TemplateBox[{
                    StyleBox["\"with remainder\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\" \""}, "RowDefault"], 
                    TemplateBox[{
                    FrameBox[
                    TagBox["1", HoldForm], FrameStyle -> GrayLevel[0.8], 
                    FrameMargins -> 1, BaselinePosition -> Baseline, 
                    ContentPadding -> False, StripOnInput -> False]}, 
                    "RowDefault"]}, "RowDefault"]}, {
                    TagBox[
                    GridBox[{{"\"Place\"", "\" \"", "\" \"", 
                    TagBox[
                    SuperscriptBox["2", "4"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "3"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "2"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "1"], HoldForm], 
                    TagBox[
                    SuperscriptBox["2", "0"], HoldForm], "\" \""}, {
                    "\" \"", "\" \"", "\" \"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", 
                    "\"\[DownArrow]\"", "\"\[DownArrow]\"", "\" \""}, {
                    SubscriptBox["21", "10"], "\"=\"", "\"(\"", "1", "0", "1",
                     "0", "1", 
                    SubscriptBox["\")\"", 
                    SubscriptBox["\"\"", "2"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> None, 
                    "ItemsIndexed" -> {{{1, 3}, {-6, -6}} -> {
                    GrayLevel[0.5]}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxItemStyle -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}, 
                    "ItemsIndexed" -> {{{1, 3}, {-5, -2}} -> {
                    GrayLevel[0.5]}}}], "Grid"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]}, "RowDefault"], HoldForm]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"number \"", 
                    TemplateBox[{
                    SubscriptBox["\"21\"", "\"10\""], "\" \""}, "RowDefault"],
                     "\"is \"", "\"equivalent \"", "\"to \"", 
                    TemplateBox[{
                    TagBox[
                    SubscriptBox["\"10101\"", "\"2\""], HoldForm], "\" \""}, 
                    "RowDefault"], "\"in \"", "\"base \"", 
                    TemplateBox[{"2", "\".\""}, "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Helvetica", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TagBox[
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    SubscriptBox["\"21\"", "\"10\""], "=", 
                    SubscriptBox["\"10101\"", "\"2\""]}], HoldForm]}, 
                    "RowDefault"], HoldForm]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show exponent form", "input" -> 
         "Result__Show exponent form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Result__Hide steps"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Other base conversions", "scanner" -> "NumberSystems", 
     "id" -> "OtherBaseConversions", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "4"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 4]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"111\"", "4"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 8]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"25\"", "8"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 12]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"19\"", "12"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 16]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"15\"", "16"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "4"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show exponent form", "input" -> 
         "OtherBaseConversions__Show exponent form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show digit key", "input" -> 
         "OtherBaseConversions__Show digit key"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More bases", "input" -> 
         "OtherBaseConversions__More bases"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Other data types", "scanner" -> "NumberSystems", "id" -> 
     "HardwareDataTypes", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"hexadecimal value\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    "\"unsigned 16\[Dash]bit integer\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    
                    TemplateBox[{"\"1500\"", "\" \"", "\"\""}, 
                    "RowDefault"]}, {
                    TagBox[
                    PaneBox[
                    "\"unsigned 32\[Dash]bit integer\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    
                    TemplateBox[{"\"15000000\"", "\" \"", "\"\""}, 
                    "RowDefault"]}, {
                    TagBox[
                    PaneBox[
                    "\"IEEE double\[Dash]precision number\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    
                    TemplateBox[{"\"0000000000003540\"", "\" \"", "\"\""}, 
                    "RowDefault"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming little\[Dash]endian byte ordering\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Big-endian", "input" -> 
         "HardwareDataTypes__Big-endian"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "HardwareDataTypes__More"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "ConvertBase", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "0.783", "parsetiming" -> "0.298", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP77131c17da46fcb8170700004a34cf4b518ef531", "host" -> 
    "https://www4f.wolframalpha.com", "server" -> "8", "related" -> 
    "https://www4f.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa77141c17da46fcb81707000012378a732bb3f6h04772732391356847504", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2019, 10, 22, 18, 47, 30.598801`8.238279390162024}, "Line" -> 
    52, "SessionID" -> 17602646018418589660}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = "21 to binary"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1373., {901., 906.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.7807480507721987`*^9},ExpressionUUID->"4f6671c5-1947-4243-b9e4-\
2fdc6b7d736d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.7807480403247633`*^9},ExpressionUUID->"cc66deb5-1329-45a4-911e-\
4babaa167563"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "3*binary*to", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["didyoumeans", {"count" -> "1"}, {"\n  ", 
      XMLElement[
      "didyoumean", {"score" -> "0.492214", "level" -> "medium"}, {"binary"}],
       "\n "}]}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "false", "error" -> "false", "numpods" -> "0", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.836", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "", "parseidserver" -> "47", "host" -> 
    "https://www4f.wolframalpha.com", "server" -> "47", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2019, 10, 22, 18, 47, 14.442006`7.912202506429828}, "Line" -> 
    50, "SessionID" -> 17602646018418589660}, Typeset`showpods$$ = {}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "3*binary*to"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {}, {}, Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, 
        Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1380., {41., 47.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.780748034489212*^9},ExpressionUUID->"986623a3-b0c7-4e08-9496-\
0dc818875f87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "21 to binary", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Input", "BaseForm[21, 2]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TemplateBox[{
               StyleBox["\"convert\"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               TemplateBox[{"\" \"", "21", "\" \""}, "RowDefault"], 
               StyleBox["\"to\"", {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], 
               TemplateBox[{"\" \"", 
                 RowBox[{"base", "2"}]}, "RowDefault"]}, "RowDefault"], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "NumberSystems", 
     "title" -> "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 2]"}], 
       XMLElement["moutput", {}, {"2^^10101"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"10101\"", "2"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show exponent form", "input" -> 
         "Result__Show exponent form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "OtherBaseConversions", "numsubpods" -> 
     "4", "position" -> "300", "scanner" -> "NumberSystems", "title" -> 
     "Other base conversions"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 4]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"111\"", "4"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 8]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"25\"", "8"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 12]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"19\"", "12"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[21, 16]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              SubscriptBox["\"15\"", "16"]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "4"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show exponent form", "input" -> 
         "OtherBaseConversions__Show exponent form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show digit key", "input" -> 
         "OtherBaseConversions__Show digit key"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More bases", "input" -> 
         "OtherBaseConversions__More bases"}, {}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"error" -> "false", "id" -> "HardwareDataTypes", "numsubpods" -> 
     "1", "position" -> "400", "scanner" -> "NumberSystems", "title" -> 
     "Other data types"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    PaneBox[
                    "\"\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    TagBox[
                    PaneBox[
                    "\"hexadecimal value\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]]}, {
                    TagBox[
                    PaneBox[
                    "\"unsigned 16\[Dash]bit integer\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    
                    TemplateBox[{"\"1500\"", "\" \"", "\"\""}, 
                    "RowDefault"]}, {
                    TagBox[
                    PaneBox[
                    "\"unsigned 32\[Dash]bit integer\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    
                    TemplateBox[{"\"15000000\"", "\" \"", "\"\""}, 
                    "RowDefault"]}, {
                    TagBox[
                    PaneBox[
                    "\"IEEE double\[Dash]precision number\"", 
                    BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    Global`TagBoxWrapper["Label"]], 
                    
                    TemplateBox[{"\"0000000000003540\"", "\" \"", "\"\""}, 
                    "RowDefault"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 
                    2} -> {Center, Baseline}}}, AutoDelete -> False, 
                   GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                   GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", 
                   "\"assuming little\[Dash]endian byte ordering\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Verdana", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Big-endian", "input" -> 
         "HardwareDataTypes__Big-endian"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "HardwareDataTypes__More"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "4", "datatypes" -> 
    "ConvertBase", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "0.759", "parsetiming" -> "0.297", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP64121fg3f64i5ifbba8h00005g27df49ge45b6h2", "host" -> 
    "https://www4f.wolframalpha.com", "server" -> "4", "related" -> 
    "https://www4f.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa64131fg3f64i5ifbba8h000025g1ea0g40c7fiei3449977083315809317", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 3., 
    "Date" -> {2019, 10, 22, 18, 47, 3.62358`7.311712842287704}, "Line" -> 49,
     "SessionID" -> 17602646018418589660}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Input", "BaseForm[21, 2]"}, Typeset`open$$ = 
   False, Typeset`newq$$ = "21 to binary"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{142., {49., 17.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[49]:=",ExpressionUUID->"cd6af43f-d486-4b9b-a9ce-c1750643fa27"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"10101\"\>", "\<\"2\"\>"],
   21,
   Editable->False],
  BaseForm[#, 2]& ]], "Output",
 CellChangeTimes->{3.78074802367232*^9},
 CellLabel->
  "Out[49]//BaseForm=",ExpressionUUID->"e3b2890e-1255-4bc4-9378-4cd68f835618"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanMinimize", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Not]", "a"}], "\[And]", "b"}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{"a", "\[And]", 
     RowBox[{"\[Not]", "b"}]}], ")"}], " ", "\[Or]", " ", 
   RowBox[{"(", 
    RowBox[{"a", " ", "\[And]", " ", "b"}], ")"}]}], " ", "]"}]], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"2174e7d0-e3fd-425d-9be9-1ea0ec1a9448"],

Cell[BoxData[
 RowBox[{"a", "||", "b"}]], "Output",
 CellChangeTimes->{3.780749525593954*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"d25b2193-070c-4e6d-8bdb-2d0e2cb38e2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanMinimize", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", "\[And]", 
     RowBox[{"\[Not]", "b"}]}], ")"}], " ", "\[Or]", " ", 
   RowBox[{"(", 
    RowBox[{"a", " ", "\[And]", " ", "b"}], ")"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{3.780749529967885*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"675181fb-e201-4b2d-a420-fa06e5597b5d"],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.780749531683302*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"326307db-9726-45e3-b0e6-5f493da0a4bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanMinimize", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Not]", "a"}], "\[And]", "b"}], ")"}], "\[Or]", " ", "a"}], 
  " ", "]"}]], "Input",
 CellChangeTimes->{{3.780749594046389*^9, 3.780749595471466*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"cf4410b7-34c8-4cf9-b824-d5ba0dca43a4"],

Cell[BoxData[
 RowBox[{"a", "||", "b"}]], "Output",
 CellChangeTimes->{3.780749596232563*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"74808fca-817c-4015-b19e-f4e0fc784c87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"BooleanTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"a", "||", "b"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"a", "||", "b"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[56]:=",ExpressionUUID->"92612781-9e76-4685-abd8-78656ead6058"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["a",
       HoldForm], 
      TagBox["b",
       HoldForm], 
      TagBox[
       RowBox[{"a", "||", "b"}],
       HoldForm]},
     {"True", "True", "True"},
     {"True", "False", "True"},
     {"False", "True", "True"},
     {"False", "False", "False"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {$CellContext`a, $CellContext`b, 
       Or[$CellContext`a, $CellContext`b]}}]]]], "Output",
 CellChangeTimes->{3.780749876704578*^9},
 CellLabel->
  "Out[56]//TableForm=",ExpressionUUID->"175d7fc6-f4da-45b2-bec3-\
bd19b2dc7d9f"]
}, Open  ]]
},
WindowSize->{1440, 644},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 3, 30, "Input",ExpressionUUID->"dfdef68e-d752-4929-8146-ebb004141fc4"],
Cell[758, 27, 345, 8, 34, "Output",ExpressionUUID->"cd59111f-daa8-46a0-86d6-ece1953aae1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140, 40, 493, 12, 30, "Input",ExpressionUUID->"b8e011eb-c03c-4a41-a311-e1ffd7878299"],
Cell[1636, 54, 172, 3, 34, "Output",ExpressionUUID->"f1276e5c-1f89-44ca-8f68-ee72c4673a72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1845, 62, 1039, 26, 30, "Input",ExpressionUUID->"74c53090-7a06-4dbe-b315-61169d0bf7d7"],
Cell[2887, 90, 830, 24, 34, "Output",ExpressionUUID->"5b579ed7-5c68-4037-8886-8578fe5d2580"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3754, 119, 1893, 54, 52, "Input",ExpressionUUID->"ac64d18b-6dd1-4a40-b547-c39142d404ef"],
Cell[5650, 175, 2547, 75, 188, "Output",ExpressionUUID->"23d499ba-c7d0-4656-9116-323f89aa41c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8234, 255, 423, 13, 30, "Input",ExpressionUUID->"a98a514f-5950-4b55-aab6-98bf11950cda"],
Cell[8660, 270, 396, 12, 34, "Output",ExpressionUUID->"5df90f04-80f1-4041-9b73-aa0aa034494c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9093, 287, 1200, 36, 30, "Input",ExpressionUUID->"76a6084f-b0ae-45c4-ab47-8acbff7ba21a"],
Cell[10296, 325, 1941, 59, 188, "Output",ExpressionUUID->"f1c5b1c5-faf6-4707-963d-908c3b25ea0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12274, 389, 177, 3, 41, "WolframAlphaLong",ExpressionUUID->"57f71df0-74e4-4ba4-9d9b-b51662bcdf97"],
Cell[12454, 394, 2783, 54, 98, "Print",ExpressionUUID->"4dd9db06-c5c0-4a21-900d-66edb94d61f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15274, 453, 1201, 36, 30, "Input",ExpressionUUID->"7acbab40-1454-4221-bc6a-2744cb0a6f3e"],
Cell[16478, 491, 1946, 60, 188, "Output",ExpressionUUID->"f33b9bfa-0b89-443e-a639-d856387cf7f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18461, 556, 953, 22, 52, "Input",ExpressionUUID->"f251f30c-fee3-4377-84e6-5e032ea79856"],
Cell[19417, 580, 1016, 27, 170, "Output",ExpressionUUID->"fe2e6560-b7d3-42da-8941-29f16e89000e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20470, 612, 948, 22, 52, "Input",ExpressionUUID->"9ea49e6a-b911-4e5d-ae0c-6e7381c983a4"],
Cell[21421, 636, 808, 20, 34, "Output",ExpressionUUID->"0b93e379-7ab9-4b02-b237-521f399e68d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22266, 661, 841, 22, 30, "Input",ExpressionUUID->"e3a68266-8656-4c55-9bbb-b48b5285a89d"],
Cell[23110, 685, 905, 27, 162, "Output",ExpressionUUID->"4b1e004e-4d7a-4a57-a091-f5b416a3d433"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24052, 717, 144, 2, 30, "Input",ExpressionUUID->"12a7d76b-15d2-4879-8119-da86b5bd728c"],
Cell[24199, 721, 806, 20, 34, "Output",ExpressionUUID->"b81f638c-413f-409b-b5a0-37ef51e46e3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25042, 746, 168, 2, 30, "Input",ExpressionUUID->"d948eaaa-80d3-4df4-b5ff-d60f419a9bd8"],
Cell[25213, 750, 696, 20, 34, "Output",ExpressionUUID->"65cca746-bdc6-4171-a23b-7a753d803e4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25946, 775, 168, 2, 30, "Input",ExpressionUUID->"ae3248fc-3f67-4e79-b48b-f5b22a81a038"],
Cell[26117, 779, 1946, 60, 188, "Output",ExpressionUUID->"40458741-84ad-4f88-9044-1068af729f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28100, 844, 144, 2, 30, "Input",ExpressionUUID->"c6ff433e-6b6a-44c2-a3a4-486319d544e0"],
Cell[28247, 848, 238, 5, 34, "Output",ExpressionUUID->"f1277f25-9103-4e1a-a350-c845038d4909"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28522, 858, 146, 2, 30, "Input",ExpressionUUID->"0685eb3d-c05a-4d62-b1f9-4b960a8eff47"],
Cell[28671, 862, 397, 12, 34, "Output",ExpressionUUID->"2f9b83f1-9780-4b48-b49c-a8f4d3b17d01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29105, 879, 146, 2, 30, "Input",ExpressionUUID->"bc96d93d-9ccb-438a-ba46-23427d185bb4"],
Cell[29254, 883, 397, 12, 34, "Output",ExpressionUUID->"58753e8e-ca99-4cbb-bfa2-7ed9df961a64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29688, 900, 144, 2, 30, "Input",ExpressionUUID->"49aa96ce-6f79-4cf9-aa74-a3128cccc15e"],
Cell[29835, 904, 209, 4, 34, "Output",ExpressionUUID->"15f00c2b-8257-44a6-8fd3-87de5ab6cbf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30081, 913, 154, 3, 30, "Input",ExpressionUUID->"a8218f0b-d9e7-4ab5-8465-78a97078d10c"],
Cell[30238, 918, 402, 9, 34, "Output",ExpressionUUID->"b04c4674-4ae9-43fd-9675-0699b66d95c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30677, 932, 180, 4, 30, "Input",ExpressionUUID->"a963429d-bb73-4a2f-bafc-333c6430064a"],
Cell[30860, 938, 85841, 1711, 1413, "Print",ExpressionUUID->"818f0491-f661-4426-a840-a814863ca62c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116738, 2654, 210, 3, 30, "Input",ExpressionUUID->"e506e9de-cdf3-4244-b0dc-e168b8454166"],
Cell[116951, 2659, 189, 3, 34, "Output",ExpressionUUID->"ae698c48-206c-439d-8616-f4939419dfa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117177, 2667, 185, 2, 41, "WolframAlphaLong",ExpressionUUID->"c6dcb0e8-31dd-44e5-a75e-b61c10c0df08"],
Cell[117365, 2671, 51529, 1022, 1817, "Print",ExpressionUUID->"4f6671c5-1947-4243-b9e4-2fdc6b7d736d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168931, 3698, 131, 3, 30, "Input",ExpressionUUID->"cc66deb5-1329-45a4-911e-4babaa167563"],
Cell[169065, 3703, 2554, 50, 98, "Print",ExpressionUUID->"986623a3-b0c7-4e08-9496-0dc818875f87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171656, 3758, 20782, 414, 83, "WolframAlphaShortInput",ExpressionUUID->"cd6af43f-d486-4b9b-a9ce-c1750643fa27"],
Cell[192441, 4174, 283, 9, 45, "Output",ExpressionUUID->"e3b2890e-1255-4bc4-9378-4cd68f835618"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192761, 4188, 427, 11, 30, "Input",ExpressionUUID->"2174e7d0-e3fd-425d-9be9-1ea0ec1a9448"],
Cell[193191, 4201, 172, 3, 34, "Output",ExpressionUUID->"d25b2193-070c-4e6d-8bdb-2d0e2cb38e2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193400, 4209, 375, 9, 30, "Input",ExpressionUUID->"675181fb-e201-4b2d-a420-fa06e5597b5d"],
Cell[193778, 4220, 149, 2, 34, "Output",ExpressionUUID->"326307db-9726-45e3-b0e6-5f493da0a4bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193964, 4227, 333, 8, 30, "Input",ExpressionUUID->"cf4410b7-34c8-4cf9-b824-d5ba0dca43a4"],
Cell[194300, 4237, 172, 3, 34, "Output",ExpressionUUID->"74808fca-817c-4015-b19e-f4e0fc784c87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194509, 4245, 586, 17, 30, "Input",ExpressionUUID->"92612781-9e76-4685-abd8-78656ead6058"],
Cell[195098, 4264, 1232, 37, 116, "Output",ExpressionUUID->"175d7fc6-f4da-45b2-bec3-bd19b2dc7d9f"]
}, Open  ]]
}
]
*)

